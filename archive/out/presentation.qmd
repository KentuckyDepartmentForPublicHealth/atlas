---
title: "Data Exploration"
author: "Ethan Heck"
format: 
  revealjs:
    theme: night
    transition: fade
editor: visual
---

## Background / Project Goals

-   Study itself aims to demonstrate the distinct patter of gene expression (transcriptomic signature) of nervous system neoplasms using a data set of 7,375 samples.

-   Shiny Atlas App Goals:

    -   Dimensionality Reduction

    -   mRNA Box Plots

    -   Survival Analysis

```{r, package import + data, echo=FALSE}
#package and data import
library(ggplot2)
library(dplyr)
load("~/Desktop/Survival Intern Project/Survival/atlas/dat/atlasDataClean.RData")

atlas_data <- data.frame(atlasDataClean)
```

## Mistry's Prior Work {.smaller}

-   The survival curves above were constructed to model the outcome, which in this case is final diagnosis.

-   Tick marks represent censored values - censoring occurs when the individual is either:

    -   Lost to follow up

    -   Has an event outside of the set study period

-   All curves are of diffuse gliomas which are tumors originating in the brain

    ::: incremental
    -   arises from glial cells, which originate in the CNS

    -   "diffuse" eludes to the nature to move across the brain rather than being localized in one region.
    :::

## Survival Analysis

```{r}
knitr::include_graphics("/Users/ethanheck/Desktop/Survival Intern Project/Survival/atlas/mistryimgcr.png")
```

## Gene Expression + Atlas Data

-   Gene expression data

    -   Columns are Gene Samples

    -   Rows are genes identified via Entrez ID

        -   eg Entrez ID of 1 corresponds to gene A1BG (Alpha 1 Beta - glycoprotein)

    -   Values are gene expression for each gene across each sampled

    -   Entrez ID's can be converted within R using the biomaRt package

## Converting Entrez ID's to Gene's within R: biomaRt {.smaller}

```{r, echo=TRUE}
        library(biomaRt)

        # Connect to Ensembl's BioMart database
        mart <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")

        # Example: Convert a vector of Entrez IDs to Gene Symbols
        entrez_ids <- c(1, 2, 100, 1000, 100002576)  # Replace with your own Entrez IDs

        gene_mapping <- getBM(
            attributes = c("entrezgene_id", "hgnc_symbol"),
            filters = "entrezgene_id",
            values = entrez_ids,
            mart = mart
        )

        # View the results
        print(gene_mapping)



```

## WorkFlow Diagram

```{r}
knitr::include_graphics("/Users/ethanheck/Desktop/Survival Intern Project/Survival/atlas/workflow.png")
```

## Data Exploration: Country of Origin

```{r, creating bar chart}
#Creating bar chart of country
library(dplyr)
library(ggplot2)
nums <- data.frame(table(atlas_data$country))
filtered_data <- nums %>%
  filter(Freq > 100) %>%
  rename(Country = Var1)

ggplot(filtered_data, aes(x = Country, y = Freq, fill = Country)) +
  geom_bar(stat = "identity", width = 1) +
  geom_text(aes(label = Freq), vjust = -0.5, color = "white") +
  labs(title = "Sample Country of Origin", x = NULL, y = NULL) +
  theme_minimal() +
  theme(
   plot.background = element_rect(fill = "black", color = NA),  
    panel.background = element_rect(fill = "black", color = NA), 
    plot.title = element_text(color = "white", hjust = 0.5, size = 14),  
    axis.title = element_text(color = "white"), 
    axis.text = element_text(color = "white", size = 7),  
    legend.position = "none",  
    panel.grid = element_blank()  
  ) +
  scale_fill_manual(values = c(
    "CHINA" = "#cd071e",
    "FRANCE" = "#000091",
    "GERMANY" = "#FFCC00",
    "JAPAN" = "#BC002D",
    "NETHERLANDS" = "#003DA5",
    "SWITZERLAND" = "#DA291C",
    "UK" = "#012169",
    "USA" = '#B31942'
  ))
```

## Data Exploration: Histology

```{r, echo=FALSE }
#table data for og histology 
table(atlas_data$histologyOriginal)
#unique og histology - 63
length(unique(atlas_data$histologyOriginal))


#creating bar chart similar to one above
nums_hist <- data.frame(table(atlas_data$histologyOriginal))
filtered_data_hist <- nums_hist %>%
  filter(Freq > 189) %>%
  rename(Histology = Var1)

#used 189 to grab top 10 most freq to prevent visual noise on plot

```

## Data Exploration: Histology Continued

```{r}
ggplot(filtered_data_hist, aes(x = Histology, y = Freq, fill = Histology)) +
  geom_bar(stat = "identity", width = 1) +
  geom_text(aes(label = Freq), vjust = -0.5, color = "white") +
  labs(title = "Sample Original Histology: 10 Most Frequent", x = NULL, y = NULL ) +
  theme_minimal() +
  theme(
    plot.background = element_rect(fill = "black", color = NA),  
    panel.background = element_rect(fill = "black", color = NA),  
    plot.title = element_text(color = "white", hjust = 0.5, size = 14),
    axis.title = element_text(color = "white"),
    axis.text = element_text(color = "white", size = 7),
    legend.position = "none",  
    plot.caption = element_text(color = "white", size = 8, hjust = 0),
    panel.grid = element_blank()  
  )

```

## Data Exploration: Tumor Grade

```{r}
grade <- data.frame(table(na.omit(atlasDataClean$grade)))

ggplot(grade, aes(x = as.factor(Var1), y = Freq, fill = as.factor(Freq))) +
  geom_bar(stat = "identity", width = 0.7) +
  geom_text(aes(label = Freq), vjust = -0.5, color = "white") +
  labs(title = "Tumor Grade Frequency", x = "Tumor Grade", y = "Frequency", caption =  "Tumor Grade 1-4 Represents the Scale of Abnormality of Tumor as Viewed Through A Microscope") +
  theme_minimal() +
  theme(
     plot.background = element_rect(fill = "black", color = NA),  
    panel.background = element_rect(fill = "black", color = NA),  
    plot.title = element_text(color = "white", hjust = 0.5, size = 14),
    axis.title = element_text(color = "white"),
    axis.text = element_text(color = "white", size = 7),
    legend.position = "none",
    panel.grid = element_blank()  ,
    plot.caption = element_text(color = 'white',hjust = 0.5, size = 8, face = "italic") 
  ) +
  scale_fill_manual(values = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"))  
```

## Data Exploration: Diagnosis

```{r}
diag <- data.frame(table(atlasDataClean$diagnosis))
filtered_data_diag <- diag%>%
  filter(Var1 != "#N/A") %>%
  filter(Freq > 150) %>%
  rename(Diagnosis = Var1)

ggplot(filtered_data_diag, aes(x = Diagnosis, y = Freq, fill = Diagnosis)) +
  geom_bar(stat = "identity", width = 1) +
  geom_text(aes(label = Freq), vjust = -0.5, color = "white") +
  labs(title = "Sample Diagnosis Type: 10 Most Frequent", x = NULL, y = NULL ) +
  theme_minimal() +
  theme(
    plot.background = element_rect(fill = "black", color = NA),  
    panel.background = element_rect(fill = "black", color = NA),  
    plot.title = element_text(color = "white", hjust = 0.5, size = 14),
    axis.title = element_text(color = "white"),
    axis.text = element_text(color = "white", size = 5),
    legend.position = "none",  
    plot.caption = element_text(color = "white", size = 8, hjust = 0),
    panel.grid = element_blank()  
  )



```
